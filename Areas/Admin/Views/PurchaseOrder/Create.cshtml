@using System.Text;

@model POSaveModel
@{   
    ViewData["Title"] = "Create";
    ViewData["PageTitle"] = "Create";
}

<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-bd ">
            <div class="panel-body">
                <form method="POST">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                    <div class="form-group col-md-4">
                        <label>Vendor</label>
                        @Html.DropDownList("VendorId", null, "--Select Vendor--", htmlAttributes: new { @class = "form-control" })                        
                    </div>

                    <div class="form-group col-md-4">
                        <label>Date</label>
                        @Html.Editor("PODate", new { htmlAttributes = new { @class = "form-control", @type="date" } })
                    </div>
                    
                    @* <div class="form-group col-md-4">
                        <label>Brand</label>
                        @Html.DropDownList("BrandId", null, "--Select Brand--", htmlAttributes: new { @class = "form-control" })                        
                    </div> *@

                    <div class="form-group col-md-12">
                        <label>Brand</label>
                        @if(TempData["Brands"]!=null){
                            @foreach (var item in (List<Brand>)TempData["Brands"])
                            {
                                <input id="chkBrands_@item.Id" name="chkBrands" value="@item.Id" type="checkbox"/>
                                <label for="chkBrands_@item.Id">@item.BrandName</label>
                            }
                        }
                        <input type="button" onclick="btnLoadProds()" value="Load Data" class="btn btn-primary btn-xs">
                    </div>

                    <div class="form-group col-md-12">
                        
                        @if(TempData["POView"]!=null){
                            StringBuilder sb = new StringBuilder();
                            @foreach (var item in (List<POViewModel>)TempData["POView"])
                            {
                                sb.Append("P:" + item.ProductId + ",U:" + item.UnitId + ",S:" + item.ShadeId + ",Q:" + item.Quantity + "~");
                                <div class="form-group col-md-6">
                                    <label>@item.ProductName</label>
                                    @* <input value="@item.Quantity" class="form-control" type="text"/> *@
                                   @Html.EditorFor(model => item.Quantity, new { htmlAttributes = new { @class = "form-control", @placeholder="Quantity" } })
                                </div>
                            }

                            <input asp-for="Assorts" value="@sb.ToString().TrimEnd('~')" class="form-control" type="hidden"/>                            
                        }
                    </div>

                    <div class="form-group col-md-12">
                        <a asp-area="Admin" asp-action="Index" class="btn btn-info">Back</a>
                        <button type="submit" class="btn btn-primary">Generate PO</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {            
            $(".Master").addClass("active");
        });

        $("#VendorId").change(function(){
            var vid = $("#VendorId").val();
            window.location = '/Admin/PurchaseOrder/Create?vend=' + vid;
        });

        function btnLoadProds()
        {        
            var vid = getUrlParameter("vend");

            if(vid == null || vid <= 0){
                alert('Please select vendor and try again.')
                return false;
            }
            
            var brandIds = [];

            $('input[name="chkBrands"]:checked').each(function(){
                brandIds.push($(this).val());                
            });

            window.location = '/Admin/PurchaseOrder/Create?vend=' + vid + "&brands=" + brandIds;        
        }

        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = window.location.search.substring(1),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                }
            }
        };
    </script>    
}