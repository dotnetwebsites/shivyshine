@using Shivyshine.Data
@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext _repository

@{
    //Layout = null;
    ViewData["Title"] = "Receipt";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cid = "";

    if (Context.Request.Cookies["payid"] != null)
    {
        cid = Context.Request.Cookies["payid"].ToString();
    } else {
        Context.Response.Redirect("/Home");
        return;
    }
}

@{
    var custord = await _repository.CustomerOrders.FirstOrDefaultAsync(p=> p.PaymentId.ToString() == cid);
    var assorts =  await _repository.CustomerOrderAssorts.Where(p => p.CustOrderId == custord.Id).ToListAsync();
    var address = await _repository.Addresses.FindAsync(custord.AddressId);

    var country = await _repository.Countries.FindAsync(address.CountryId);
    var state = await _repository.States.FindAsync(address.StateId);
    var city = await _repository.Cities.FindAsync(address.CityId);

    var ship = await _repository.ShippingMasters.FindAsync(custord.ShippingId);
}

<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-responsive">
            <tbody>
                <tr>
                    <th colspan="7">Tax Invoice/Bill of Supply</th>
                </tr>
                <tr>
                    <th colspan="3">
                        <p>To: @address.FullName</p>
                        <p>Mobile No: @address.PhoneNumber</p>
                        <p>Email: @address.Email</p>                        
                    </th>
                    <th colspan="4">
                        @* <p>GSTIN - 19AAXCS0655F1ZV</p>
                            <p>PAN - AAXCS0655F</p>
                            <p>CIN - U52399DL2016PTC299716</p> *@
                    </th>
                </tr>
                <tr>
                    <th colspan="3">Ship To:-
                        <p>@address.FullAddress, @city.CityName, @address.Pincode, @state.StateName,
                            @country.CountryName</p>
                    </th>
                    <th colspan="4">Bill To:-
                        <p>@address.FullAddress, @city.CityName, @address.Pincode, @state.StateName,
                            @country.CountryName</p>
                    </th>
                </tr>
                <tr>
                    <th colspan="3">
                        <p>Order: @custord.OrderNo</p>
                        @* <p>Invoice Number: FAE00N2100021534</p> *@
                        <p>Payment method: @{
                                if (custord.PaymentMode == "COD")
                                {
                                    <span>Cash on Delivery</span>
                                }
                                else if (custord.PaymentMode == "BANK")
                                {
                                    <span>Bank Transfer</span>
                                }
                            }
                        </p>
                        <p>Total Items: @assorts.Count()</p>
                    </th>
                    <th colspan="4">
                        <p>Order Date: @custord.OrderDate.ToString("dd-MM-yyyy") </p>
                        @* <p>Invoice Date: 19-12-2020</p> *@
                        @* <p>Tracking ID:</p> *@
                        @* <p>Tote-Id:</p> *@
                    </th>
                </tr>
                <tr>
                    <th>S.No.</th>
                    <th>Item</th>
                    <th>HSN</th>
                    <th>Qty</th>
                    <th>MRP(Rs)</th>
                    <th>Savings(Rs)</th>
                    <th>Total Amt(Rs)</th>
                </tr>
                @{
                    int assort_count = 1; 
                    double total_save = 0, sum_total_save = 0, total_qty = 0, total_mrp = 0, total_amt = 0;
                }
                @foreach (var a in assorts)
                {
                    var product = await _repository.Products.FindAsync(a.ProductId);
                    var unit = await _repository.ProductUnits.FindAsync(a.UnitId);
                    var shade = await _repository.Shades.FindAsync(a.ShadeId);
                    double saved = 0;
                    
                    total_qty += a.Quantity;

                    if(shade != null && shade.IsVisiblePrice)
                    {
                        saved = unit.PriceDel - shade.Price;                        
                        total_mrp += shade.PriceDel;
                        total_amt += shade.Price * a.Quantity;
                    }
                    else
                    {
                        saved = unit.PriceDel - unit.Price;                        
                        total_mrp += unit.PriceDel;
                        total_amt += unit.Price * a.Quantity;
                    }
                    
                    total_save += saved;
                    sum_total_save += (saved * a.Quantity);
                    
                    <tr>
                        <th>@assort_count</th>
                        <th>@product.ProductName</th>
                        <th>@product.HsnCode</th>
                        <th>@a.Quantity</th>
                        @if(shade != null && shade.IsVisiblePrice)
                        {
                            <th>@shade.PriceDel.ToString("##0.00")</th>
                            <th>@saved.ToString("##0.00")/UNIT</th>
                            <th>@shade.AmountCalc(shade.Price, a.Quantity).ToString("##0.00")</th>
                        }
                        else
                        {
                            <th>@unit.PriceDel.ToString("##0.00")</th>
                            <th>@saved.ToString("##0.00")/UNIT</th>
                            <th>@unit.AmountCalc(unit.Price, a.Quantity).ToString("##0.00")</th>
                        }
                        
                    </tr>
                    assort_count++;
                }
                <tr>
                    <th colspan="3">Summary</th>
                    <th>@total_qty</th>
                    <th>@total_mrp.ToString("##0.00")</th>
                    <th>@total_save.ToString("##0.00")</th>
                    <th>@total_amt.ToString("##0.00")</th>
                </tr>
                <tr>
                    <th colspan="4" rowspan="3">You have SAVED Rs. @sum_total_save.ToString("##0.00") on this order</th>
                    @* <th colspan="2">GST</th> *@
                    @* <th>18%</th> *@
                </tr>
                <tr>
                    <th colspan="2">Delivery Charges</th>
                    <td>
                        @{
                            var pincode = Context.Request.Cookies["zipcode"]?.ToString();
                            double charges=0;                                
                            if(pincode!=null && _repository.ShippingMasters.Any(p=>p.Pincode == Convert.ToUInt32(pincode) && p.MinAmount > total_amt))
                            {
                                //var ship = _repository.ShippingMasters.FirstOrDefault(p=>p.Pincode == Convert.ToUInt32(pincode) && p.MinAmount > totalamount);
                                charges = ship.ShippingCharge;
                                <span class="amount shipcharges" style="float: right;"> @charges.ToString("#,##0.00") <i class="fa fa-inr"></i></span>
                            } else if(_repository.ShippingMasters.Any(p=>p.Pincode == Convert.ToUInt32(pincode) && p.MinAmount < total_amt)){
                                
                                <span class="amount shipcharges" style="float: right;"> Free Shipping </span>
                            } else {
                                <span class="amount shipcharges" style="float: right;"> Free Shipping </span>
                            }

                        }
                    </td>
                    @* <th>@ship.ShippingCharge.ToString("##0.00")</th> *@
                </tr>
                <tr>

                    <th colspan="2">GRAND TOTAL</th>
                    <th>
                        @{
                            double gtot = total_amt + charges;
                        }
                        <span>@gtot.ToString("##0.00")</span>
                    </th>
                </tr>
                <tr>
                    <th colspan="2" rowspan="4">Shivyshine</th>
                    <th colspan="2">GST%</th>
                    <th>Taxable Amount</th>
                    <th>SGST</th>
                    <th>CGST</th>
                </tr>
                @foreach (var a in assorts)
                {
                    var unit = await _repository.ProductUnits.FindAsync(a.UnitId);
                    var shade = await _repository.Shades.FindAsync(a.ShadeId);
                    
                    if(shade != null && shade.IsVisiblePrice)
                    {
                        var gstamount = shade.GSTCalc(shade.AmountCalc(shade.Price, a.Quantity), shade.GSTIN);
                        var cgsg = gstamount / 2;
                        <tr>
                            <th colspan="2">@shade.GSTIN%</th>
                            <th>@gstamount.ToString("##0.00")</th>
                            <th>@cgsg.ToString("##0.00")</th>
                            <th>@cgsg.ToString("##0.00")</th>
                        </tr>
                    }else{
                        var gstamount = unit.GSTCalc(unit.AmountCalc(unit.Price, a.Quantity), unit.GSTIN);
                        var cgsg = gstamount / 2;
                        <tr>
                            <th colspan="2">@unit.GSTIN%</th>
                            <th>@gstamount.ToString("##0.00")</th>
                            <th>@cgsg.ToString("##0.00")</th>
                            <th>@cgsg.ToString("##0.00")</th>
                        </tr>
                    }
                }
                <tr>

                    <th colspan="2">NET PAYABLE</th>
                    <th>@gtot.ToString("##0.00")</th>
                    <th></th>
                    <th></th>
                </tr>
            </tbody>
        </table>

    </div>

</div>
